@using Microsoft.AspNetCore.Components.Forms

@typeparam T where T : class, new()
@inherits DocumentBase<T>

@if (DynamicModel == null)
{
    <Loading Message="Loading..."/>
}
else
{
    @if(@Alert == null)
    {
        <EditForm Model="@DynamicModel.Model" OnValidSubmit="@SubmitAsync">
            <FluentValidationValidator/>
            <MudToolBar DisableGutters="true" Style="border-bottom: 1px solid gray;">
                @if (isSaveInProgress)
                {
                    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
                }
                else if (!isDeleteInProgress)
                {
                    <MudTooltip Text="Save" Arrow="true">
                        <MudIconButton ButtonType="ButtonType.Submit" Color="Color.Inherit" Icon="@Icons.Material.Filled.Save"/>
                    </MudTooltip>
                }

                <MudText Typo="Typo.h6">@DynamicModel.Title</MudText>

                <ValidationBadge Title="@DynamicModel.Title" Messages="@messages" />

                <MudSpacer />

                @if (isDeleteInProgress)
                {
                    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
                }
                else if (!isSaveInProgress)
                {
                    <MudTooltip Text="Delete" Arrow="true">
                        <MudIconButton Color="Color.Inherit" Icon="@Icons.Material.Filled.Delete" OnClick="DeleteAsync" />
                    </MudTooltip>
                }
            </MudToolBar>
            <MudPaper>
                @foreach(var rootContainer in DynamicModel.RootContainers)
                {
                    <DynamicComponent @key=rootContainer.ContainerId Type="rootContainer.DynamicComponent" Parameters="rootContainer.Parameters" />   
                }
            </MudPaper>
        </EditForm>
    }
    else
    {
        <Alert AlertType="@Alert.AlertType" Title="@Alert.Title" Message="@Alert.Message" />
    }
}